<?php

/*
    This file has been generated using MTL ESERV:BUILD command. Contact Anjana on anjana@millertech.co.uk for more
    information. Thanks.
*/

namespace ESERV\MAIN\TemplateBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TemplateVersionRepository extends EntityRepository
{   
    public function createTemplateVersion(
        $em       
       ,$content            
       ,$version
       ,$name
       ,$template_type
       ,$is_customised = 'N'
       ,$template = NULL
       ,$header = NULL
       ,$footer = NULL
       ,$code = NULL
       ,$mail_merge_type = NULL
       ,$template_document_group = NULL
       ,$language = NULL
       ,$system_printer = NULL
       ,$is_default = NULL
       ,$report_id = NULL
       ,$curr_temp_vers_id = NULL
    ) {
        $template_version = new \ESERV\MAIN\TemplateBundle\Entity\TemplateVersion();
        $template_version->setContent($content);
        
        if (!(is_null($curr_temp_vers_id))) {
            $tv = $em->getRepository('ESERVMAINTemplateBundle:TemplateVersion')->find($curr_temp_vers_id);
            $version = $tv->getVersion();
            $name = $tv->getName();
            $template_type = $tv->getTemplateType();
            $is_customised = 'Y';
            $template = $tv->getTemplate();
            $header = $tv->getHeader();
            $footer = $tv->getFooter();
            $code = $tv->getCode();
            $mail_merge_type = $tv->getMailMergeType();
            $template_document_group = $tv->getTemplateDocumentGroup();
            $language = $tv->getLanguage();
            $system_printer = $tv->getSystemPrinter();
            $is_default = $tv->getIsDefault();
            $report_id = $tv->getReportId();
        } else {

        }
        $template_version->setVersion($version);
        $template_version->setName($name);
        if (!($template_type instanceof \ESERV\MAIN\TemplateBundle\Entity\TemplateType)) {
            $template_type = $em->getReference('ESERV\MAIN\TemplateBundle\Entity\TemplateType', $template_type);            
        }
        $template_version->setTemplateType($template_type);
        $template_version->setIsCustomised($is_customised);
        if (!(is_null($template))) {
            if (!($template instanceof \ESERV\MAIN\TemplateBundle\Entity\Template)) {
                $template = $em->getReference('ESERV\MAIN\TemplateBundle\Entity\Template', $template);            
            }
            $template_version->setTemplate($template);
        }
        if (!(is_null($header))) {
            if (!($header instanceof \ESERV\MAIN\TemplateBundle\Entity\TemplateVersion)) {
                $header = $em->getReference('ESERV\MAIN\TemplateBundle\Entity\TemplateVersion', $header);            
            }
            $template_version->setHeader($header);
        }
        if (!(is_null($footer))) {
            if (!($footer instanceof \ESERV\MAIN\TemplateBundle\Entity\TemplateVersion)) {
                $footer = $em->getReference('ESERV\MAIN\TemplateBundle\Entity\TemplateVersion', $footer);
            }
            $template_version->setFooter($footer);
        }
        $template_version->setCode($code);
        if (!(is_null($mail_merge_type))) {
            if (!($mail_merge_type instanceof \ESERV\MAIN\TemplateBundle\Entity\MailMergeType)) {
                $mail_merge_type = $em->getReference('ESERV\MAIN\TemplateBundle\Entity\MailMergeType', $mail_merge_type);
            }
            $template_version->setMailMergeType($mail_merge_type);
        }
        if (!(is_null($template_document_group))) {
            if (!($template_document_group instanceof \ESERV\MAIN\SystemConfigBundle\Entity\SystemCode)) {
                $template_document_group = $em->getReference('ESERV\MAIN\SystemConfigBundle\Entity\SystemCode', $template_document_group);
            }
            $template_version->setTemplateDocumentGroup($template_document_group);
        }
        if (!(is_null($language))) {
            if (!($language instanceof \ESERV\MAIN\SystemConfigBundle\Entity\Language)) {
                $language = $em->getReference('ESERV\MAIN\SystemConfigBundle\Entity\Language', $language);
            }
            $template_version->setLanguage($language);
        }
        if (!(is_null($system_printer))) {
            if (!($system_printer instanceof \ESERV\MAIN\SystemConfigBundle\Entity\SystemPrinter)) {
                $system_printer = $em->getReference('ESERV\MAIN\SystemConfigBundle\Entity\SystemPrinter', $system_printer);
            }
            $template_version->setSystemPrinter($system_printer);
        }
        if (!(is_null($is_default))) {
            $template_version->setIsDefault($is_default);
        }
        if (!(is_null($report_id))) {
            $template_version->setReportId($report_id);
        }
        $em->persist($template_version);
        $em->flush();
        
        return $template_version;        
    } #createTemplateVersion end

}