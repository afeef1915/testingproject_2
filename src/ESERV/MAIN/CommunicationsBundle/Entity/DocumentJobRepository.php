<?php
            
/*
    This file has been generated using MTL ESERV:BUILD command. Contact Anjana on anjana@millertech.co.uk for more
    information. Thanks.
*/

namespace ESERV\MAIN\CommunicationsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentJobRepository extends EntityRepository
{   
    const REPOSITORY_NAME = 'ActivityRepository';    

    public function createDocumentJob(
        $processed_date = NULL
       ,$queued_date = NULL
       ,$system_printer = NULL
       ,$em
    ) {
        $doc_job = new \ESERV\MAIN\CommunicationsBundle\Entity\DocumentJob();
        if (!(is_null($processed_date))) {
            $doc_job->setProcessedDate($processedDate);
        }
        if (!(is_null($queued_date))) {
            $doc_job->setQueuedDate($queued_date);
        }
        if ($system_printer instanceof \ESERV\MAIN\SystemConfigBundle\Entity\SystemCode) {
            $doc_job->setSystemPrinter($system_printer);
        } elseif (!(is_null($system_printer))) {
            $system_printer = $em->getReference('ESERV\MAIN\SystemConfigBundle\Entity\SystemPrinter', $system_printer);            
            $doc_job->setSystemPrinter($system_printer);
        }
        $em->persist($doc_job);
        $em->flush();
        
        return $doc_job;
    }
    
    public function deleteDocumentJobById(
        $document_job_id
       ,$insert_mtl_error = TRUE
    ) {
        try {
            $del = $this->getEntityManager()
                        ->createQueryBuilder()
                        ->delete('ESERVMAINCommunicationsBundle:DocumentJob', 'dj')
                        ->where('dj.id = :doc_job_id')
                        ->setParameter('doc_job_id', $document_job_id)
                        ->getQuery();
            $del->execute();
            
            $success = TRUE;
            $message = NULL;
        } catch (\Exception $ex) {
            $function = 'deleteDocumentJobById';
            
            if ($insert_mtl_error === TRUE) { 
                $message = sprintf(
                               '$document_job_id: %s, Exception: %s'
                              ,$document_job_id
                              ,$ex->getMessage()
                           );
                $this->c->get('db_core_function_services')
                        ->insertMtlError(
                              ($function . ' (' . self::REPOSITORY_NAME. ')')
                             ,$message
                          );
            } else {
                $message = sprintf(
                               $function . '(' . 
                               '$document_job_id: %s) (%s), ' . 
                               'Exception: %s'
                              ,$document_job_id
                              ,self::REPOSITORY_NAME
                              ,$ex->getMessage()
                           );
            }
            $success = FALSE;
        }
        $result_arr = array(
            'success' => $success,
            'msg' => $message
        );        
        
        return $result_arr;        
    } #deleteDocumentJobById end
}