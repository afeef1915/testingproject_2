<?php
            
        /*
            This file has been generated using MTL ESERV:BUILD command. Contact Anjana on anjana@millertech.co.uk for more
            information. Thanks.
        */

        namespace ESERV\MAIN\ContactBundle\Components\ContactDetailsBundle\Entity;

        use Doctrine\ORM\EntityRepository;
        use ESERV\MAIN\Services\DbCoreFunctions;

        /**
         * ActivityRepository
         *
         * This class was generated by the Doctrine ORM. Add your own custom
         * repository methods below.
         */
        class AddressTypeRepository extends EntityRepository
        {
            public function getByContactTypeAndCode($contact_type_code, $address_type_code) {
                
                try {
                    $add_type = $this->createQueryBuilder('at')
                                     ->leftJoin('at.contactType', 'ct')
                                     ->where('at.code = :at_code')
                                     ->setParameter('at_code', $address_type_code)
                                     ->andWhere('ct.code = :ct_code')
                                     ->setParameter('ct_code', $contact_type_code)                            
                                     ->getQuery()
                                     ->getSingleResult();
                    
                    return $add_type;                    
                } catch (\Exception $ex) {
                    #echo $ex->getMessage(); die;                    
                    return FALSE;
                }
            } #getByContactTypeAndCode end          
            
            public function getByContactType($contact_type_code, $arrayForDropdown=false) {
                
                try {
                    $qb = $this->getEntityManager()->createQueryBuilder();
                    $add_type = $qb->select('at.id, at.name, at.code')
                                    ->from('ESERVMAINContactBundleComponentsContactDetailsBundle:AddressType', 'at')
                                    ->leftJoin('at.contactType', 'ct')
                                    ->andWhere('ct.code = :ct_code')
                                    ->setParameter('ct_code', $contact_type_code)                            
                                    ->getQuery()
                                    ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
                    
                    if ($arrayForDropdown == true)  
                    {
                        return $this->arrangeDataForDropdownSelect($add_type);
                    }  else {
                        return $add_type; 
                    }
                } catch (\Exception $ex) {                   
                    return FALSE;
                }
            } #getByContactType end   
            
            private function arrangeDataForDropdownSelect($query_data)
            {
                $data_array = array();
                foreach ($query_data as $a) {
                    $data_array[$a['id']] = $a['name'].'('.$a['code'].')';
                }                
                return $data_array;
            }
        }        