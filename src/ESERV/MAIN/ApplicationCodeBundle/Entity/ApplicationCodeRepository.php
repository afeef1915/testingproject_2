<?php

namespace ESERV\MAIN\ApplicationCodeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ApplicationCodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApplicationCodeRepository extends EntityRepository
{    
    
    public function getAppCodes($appCodeType) {
        $app_code_type = $this->getEntityManager()->getRepository('ESERVMAINApplicationCodeBundle:ApplicationCodeType')
                ->findOneBy(array('code' => $appCodeType));

        $result1 = $this->getEntityManager()->createQueryBuilder();
        $app_code = $result1->select('p.id, p.name')
                ->from('ESERVMAINApplicationCodeBundle:ApplicationCode', 'p')
                ->where('p.applicationCodeType = :act')
                ->setParameter('act', $app_code_type)
                ->orderBy('p.name', 'ASC')
                ->getQuery()
                ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

        $appCodeArray = array();
        foreach ($app_code as $a) {
            $appCodeArray[$a['id']] = $a['name'];
        }

        return $appCodeArray;
    }
    /*
     * Parameters: 
     *   $cols: array of column names to be selected - must have table alias 
     *          e.g. to select application_code.id the array should be 
     *          array('ac.id') not array('id')
     */
    public function getOneByCodeAndApplicationTypeCode($application_code_code, $application_code_type_code, $cols = NULL) {
          $select = $this->createQueryBuilder('ac')
                         ->leftJoin('ac.applicationCodeType', 'act');          
          if (empty($cols)) {
          } else {
              $select_cols = 'AllColumns';
              if (is_array($cols)) {
                  foreach ($cols as $key => $value) {
                      if ($select_cols === 'AllColumns') {
                          $select_cols = $value;
                      } else {
                          $select_cols = $select_cols . ',' . $value;
                      }                      
                  }
              }
              if ($select_cols != 'AllColumns') {
                  $select->select($select_cols);
              }
          }
          $result = $select->where('ac.code = :ac_code')
                           ->setParameter('ac_code', $application_code_code)
                           ->andWhere('act.code = :act_code')
                           ->setParameter('act_code', $application_code_type_code)                            
                           ->getQuery()
                           ->getSingleResult();
          
        return $result;
    } #getOneByCodeAndContactStatus end    

    /*
     * Parameters: 
     *   $cols: array of column names to be selected - must have table alias 
     *          e.g. to select application_code.id the array should be 
     *          array('a.id') not array('id')
     */
    public function getById($id, $cols = NULL) {
          $select = $this->createQueryBuilder('a');          
          if (empty($cols)) {
          } else {
              $select_cols = 'AllColumns';
              if (is_array($cols)) {
                  foreach ($cols as $key => $value) {
                      if ($select_cols === 'AllColumns') {
                          $select_cols = $value;
                      } else {
                          $select_cols = $select_cols . ',' . $value;
                      }                      
                  }
              }
              if ($select_cols != 'AllColumns') {
                  $select->select($select_cols);
              }
          }
          $result = $select->where('a.id = :a_id')
                           ->setParameter('a_id', $id)
                           ->getQuery()
                           ->getSingleResult();
          
        return $result;
    } #getById end
    
        
    public function getAppCodesByTypeAndCodes($appCodeType, $appCodesArr) {
        $app_code_type = $this->getEntityManager()->getRepository('ESERVMAINApplicationCodeBundle:ApplicationCodeType')
                ->findOneBy(array('code' => $appCodeType));

        $result1 = $this->getEntityManager()->createQueryBuilder();
        $app_code = $result1->select('p.id, p.name')
                ->from('ESERVMAINApplicationCodeBundle:ApplicationCode', 'p')
                ->where('p.applicationCodeType = :act')
                ->setParameter('act', $app_code_type)
                ->andWhere ('p.code IN (:codesArr)')
                ->setParameter('codesArr', $appCodesArr)
                ->orderBy('p.name', 'ASC')
                ->getQuery()
                ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

        $appCodeArray = array();
        foreach ($app_code as $a) {
            $appCodeArray[$a['id']] = $a['name'];
        }

        return $appCodeArray;
    }
}
