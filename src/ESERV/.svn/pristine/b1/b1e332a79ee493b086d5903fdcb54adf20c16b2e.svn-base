<?php
            
/*
    This file has been generated using MTL ESERV:BUILD command. Contact Anjana on anjana@millertech.co.uk for more
    information. Thanks.
*/

namespace ESERV\MAIN\CpdBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ContactCpdStatusDetailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactCpdStatusDetailRepository extends EntityRepository
{ 
    
    public function getContactCpdStatusDetailByContact($contactId, $cpdStatusCode) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $csd = $qb->select('csd.code', 'csd.name', 'ccsd.conCpdStatusText')
                ->from('ESERVMAINCpdBundle:ContactCpdStatusDetail', 'ccsd')
                ->leftJoin('ccsd.contactCpdStatus', 'ccs')
                ->leftJoin('ccs.cpdStatus', 'cs')
                ->leftJoin('ccsd.cpdStatusDetail', 'csd')
                ->where('cs.code = :cs')
                ->setParameter('cs', $cpdStatusCode)
                ->andWhere('ccs.contact = :c')
                ->setParameter('c', $contactId)
                ->orderBy('csd.displayOrder', 'ASC')
                ->getQuery()
                ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
        
        return $csd;
    }
    
    public function getContactCpdStatusDetailCurrentAllFields($contactId, $cpdStatusCode) 
    {   
        $qb = $this->getEntityManager()->createQueryBuilder();
        $csd = $qb->select('csd.code', 'csd.name', 'ccsd.conCpdStatusText', 'ccsd.id')
                ->from('ESERVMAINCpdBundle:CpdStatus', 'cs')
                ->innerJoin('ESERVMAINCpdBundle:CpdStatusDetail', 'csd','with','csd.cpdStatus = cs.id')
                ->innerJoin('ESERVMAINCpdBundle:ContactCpdStatusDetail', 'ccsd','with','ccsd.cpdStatusDetail = csd.id')
                ->innerJoin('ESERVMAINCpdBundle:ContactCpdStatus', 'ccs', 'with', 'ccsd.contactCpdStatus = ccs.id')
//                ->leftJoin('ESERVMAINCpdBundle:ContactCpdStatusHist', 'ccsh','with','ccsh.contactCpdStatus = ccs.id')
//                ->where('ccsh.id is NULL')
                ->where('cs.code = :cstCode')
                ->andWhere('ccs.contact = :eservContId')
                ->setParameter('cstCode', $cpdStatusCode)
                ->setParameter('eservContId', $contactId)
                ->orderBy('csd.displayOrder', 'asc')
                ->getQuery()
                ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY)
                ;       
        
        $ccsdArray = array();
        $areAllValuesNull = 'Y';
        
        foreach ($csd as $value) {
            $ccsdArray[$value['id']] = array(
                'code' =>$value['code'],
                'name' =>$value['name'],
                'value' => $value['conCpdStatusText'],
            );
        }
        
        foreach($csd as $value){
            if(null != $value['conCpdStatusText']){
                $areAllValuesNull = 'N';
                break;
            }
        }
        
        $tmp_arr = array('ccsdArray' => $ccsdArray, 'areAllValuesNull' => $areAllValuesNull);
        return $tmp_arr;        
    }

}